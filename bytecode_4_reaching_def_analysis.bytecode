============ after processor `reaching_def_analysis` ================

[variant baseline]
public fun Bbay::add_items($t0|account: signer, $t1|item_id: u64, $t2|item_name: vector<u64>, $t3|item_quantity: u64, $t4|item_price: u64, $t5|selling_status: bool) {
     var $t6|i: u64
     var $t7|num_of_products: &mut u64
     var $t8|owner_data: &mut Bbay::Owner
     var $t9|product_data: &mut Bbay::Products
     var $t10: u64
     var $t11: signer
     var $t12: address
     var $t13: &mut Bbay::Owner
     var $t14: &mut Bbay::Owner
     var $t15: table::Table<address, address>
     var $t16: signer
     var $t17: address
     var $t18: address
     var $t19: address
     var $t20: &mut Bbay::Products
     var $t21: &mut Bbay::Owner
     var $t22: &mut u64
     var $t23: u64
     var $t24: &mut u64
     var $t25: u64
     var $t26: u64
     var $t27: u64
     var $t28: bool
     var $t29: u64
     var $t30: &mut u64
     var $t31: u64
     var $t32: bool
     var $t33: &mut Bbay::Products
     var $t34: &mut table::Table<u64, u64>
     var $t35: u64
     var $t36: u64
     var $t37: &mut Bbay::Products
     var $t38: &mut table::Table<u64, u64>
     var $t39: u64
     var $t40: u64
     var $t41: &mut Bbay::Products
     var $t42: &mut table::Table<u64, bool>
     var $t43: u64
     var $t44: bool
     var $t45: &mut u64
     var $t46: u64
     var $t47: u64
     var $t48: u64
     var $t49: &mut u64
     var $t50: u64
     var $t51: u64
     var $t52: u64
     var $t53: &mut u64
     var $t54: &mut Bbay::Products
     var $t55: &mut vector<u64>
     var $t56: u64
     var $t57: &mut Bbay::Products
     var $t58: &mut table::Table<u64, vector<u64>>
     var $t59: u64
     var $t60: vector<u64>
     var $t61: &mut Bbay::Products
     var $t62: &mut table::Table<u64, bool>
     var $t63: u64
     var $t64: bool
  0: trace_local[account]($t0)
  1: trace_local[item_id]($t1)
  2: trace_local[item_name]($t2)
  3: trace_local[item_quantity]($t3)
  4: trace_local[item_price]($t4)
  5: trace_local[selling_status]($t5)
  6: $t10 := 0
  7: $t6 := $t10
  8: trace_local[i]($t10)
  9: $t11 := copy($t0)
 10: $t12 := signer::address_of($t0)
 11: $t13 := borrow_global<Bbay::Owner>($t12)
 12: $t8 := $t13
 13: trace_local[owner_data]($t13)
 14: $t14 := copy($t13)
 15: $t15 := get_field<Bbay::Owner>.resource_account($t13)
 16: $t16 := move($t0)
 17: $t17 := signer::address_of($t0)
 18: $t18 := table::borrow<address, address>($t15, $t17)
 19: $t19 := move($t18)
 20: $t20 := borrow_global<Bbay::Products>($t18)
 21: $t9 := $t20
 22: trace_local[product_data]($t20)
 23: $t21 := move($t13)
 24: $t22 := borrow_field<Bbay::Owner>.num_of_products_added($t13)
 25: $t7 := $t22
 26: trace_local[num_of_products]($t22)
 27: label L5
 28: $t23 := copy($t6)
 29: $t24 := copy($t22)
 30: $t25 := read_ref($t22)
 31: $t26 := copy($t3)
 32: $t27 := +($t25, $t3)
 33: $t28 := <=($t6, $t27)
 34: if ($t28) goto 35 else goto 71
 35: label L1
 36: label L2
 37: $t29 := copy($t6)
 38: $t30 := copy($t22)
 39: $t31 := read_ref($t22)
 40: $t32 := >($t6, $t31)
 41: if ($t32) goto 42 else goto 58
 42: label L4
 43: $t33 := copy($t20)
 44: $t34 := borrow_field<Bbay::Products>.sr_number($t20)
 45: $t35 := copy($t6)
 46: $t36 := copy($t1)
 47: table::add<u64, u64>($t34, $t6, $t1)
 48: $t37 := copy($t20)
 49: $t38 := borrow_field<Bbay::Products>.item_price($t20)
 50: $t39 := copy($t6)
 51: $t40 := copy($t4)
 52: table::add<u64, u64>($t38, $t6, $t4)
 53: $t41 := copy($t20)
 54: $t42 := borrow_field<Bbay::Products>.item_on_selling($t20)
 55: $t43 := copy($t6)
 56: $t44 := copy($t5)
 57: table::add<u64, bool>($t42, $t6, $t5)
 58: label L3
 59: $t45 := copy($t22)
 60: $t46 := read_ref($t22)
 61: $t47 := 1
 62: $t48 := +($t46, $t47)
 63: $t49 := copy($t22)
 64: write_ref($t22, $t48)
 65: $t50 := move($t6)
 66: $t51 := 1
 67: $t52 := +($t6, $t51)
 68: $t6 := $t52
 69: trace_local[i]($t52)
 70: goto 27
 71: label L0
 72: $t53 := move($t22)
 73: destroy($t22)
 74: $t54 := copy($t20)
 75: $t55 := borrow_field<Bbay::Products>.item_id($t20)
 76: $t56 := copy($t1)
 77: vector::push_back<u64>($t55, $t1)
 78: $t57 := copy($t20)
 79: $t58 := borrow_field<Bbay::Products>.item_name($t20)
 80: $t59 := copy($t1)
 81: $t60 := move($t2)
 82: table::add<u64, vector<u64>>($t58, $t1, $t2)
 83: $t61 := move($t20)
 84: $t62 := borrow_field<Bbay::Products>.item_sold($t20)
 85: $t63 := move($t1)
 86: $t64 := false
 87: table::add<u64, bool>($t62, $t1, $t64)
 88: return ()
}


[variant baseline]
public fun Bbay::get_resource_account($t0|addr: address): address {
     var $t1: address
     var $t2: Bbay::Owner
     var $t3: table::Table<address, address>
     var $t4: address
     var $t5: address
     var $t6: address
  0: trace_local[addr]($t0)
  1: $t1 := 0x1a
  2: $t2 := get_global<Bbay::Owner>($t1)
  3: $t3 := get_field<Bbay::Owner>.resource_account($t2)
  4: $t4 := move($t0)
  5: $t5 := table::borrow<address, address>($t3, $t0)
  6: $t6 := move($t5)
  7: trace_return[0]($t5)
  8: return $t5
}


[variant baseline]
fun Bbay::init_module($t0|account: signer) {
     var $t1: signer
     var $t2: signer
     var $t3: address
     var $t4: u64
     var $t5: u64
     var $t6: table::Table<address, address>
     var $t7: Bbay::Owner
  0: trace_local[account]($t0)
  1: $t1 := copy($t0)
  2: $t2 := move($t0)
  3: $t3 := signer::address_of($t0)
  4: $t4 := 0
  5: $t5 := 0
  6: $t6 := table::new<address, address>()
  7: $t7 := pack Bbay::Owner($t3, $t4, $t5, $t6)
  8: move_to<Bbay::Owner>($t7, $t0)
  9: return ()
}


[variant baseline]
public fun Bbay::order<#0>($t0|account: signer, $t1|item_id: u64, $t2|sr_no: u64, $t3|prepaid: bool) {
     var $t4|product_data: Bbay::Products
     var $t5|resource_account: address
     var $t6|resource_account_signer: signer
     var $t7|user_data: &mut Bbay::User
     var $t8: signer
     var $t9: address
     var $t10: address
     var $t11: address
     var $t12: Bbay::ResourceAccountSignerCap
     var $t13: account::SignerCapability
     var $t14: signer
     var $t15: address
     var $t16: &mut Bbay::User
     var $t17: address
     var $t18: Bbay::Products
     var $t19: &mut Bbay::User
     var $t20: &mut vector<u64>
     var $t21: u64
     var $t22: &mut Bbay::User
     var $t23: &mut vector<u64>
     var $t24: u64
     var $t25: bool
     var $t26: bool
     var $t27: bool
     var $t28: signer
     var $t29: address
     var $t30: Bbay::Products
     var $t31: table::Table<u64, u64>
     var $t32: u64
     var $t33: u64
     var $t34: u64
     var $t35: &mut Bbay::User
     var $t36: &mut vector<u64>
     var $t37: u64
     var $t38: Bbay::Products
     var $t39: &mut Bbay::User
     var $t40: &mut vector<u64>
     var $t41: u64
  0: trace_local[account]($t0)
  1: trace_local[item_id]($t1)
  2: trace_local[sr_no]($t2)
  3: trace_local[prepaid]($t3)
  4: $t8 := move($t0)
  5: $t9 := signer::address_of($t0)
  6: $t10 := Bbay::get_resource_account($t9)
  7: $t5 := $t10
  8: trace_local[resource_account]($t10)
  9: $t11 := copy($t10)
 10: $t12 := get_global<Bbay::ResourceAccountSignerCap>($t10)
 11: $t13 := get_field<Bbay::ResourceAccountSignerCap>.signer_cap($t12)
 12: $t14 := account::create_signer_with_capability($t13)
 13: $t6 := $t14
 14: trace_local[resource_account_signer]($t14)
 15: $t15 := move($t10)
 16: $t16 := borrow_global<Bbay::User>($t10)
 17: $t7 := $t16
 18: trace_local[user_data]($t16)
 19: $t17 := 0x1a
 20: $t18 := get_global<Bbay::Products>($t17)
 21: $t4 := $t18
 22: trace_local[product_data]($t18)
 23: $t19 := copy($t16)
 24: $t20 := borrow_field<Bbay::User>.orders($t16)
 25: $t21 := move($t1)
 26: vector::push_back<u64>($t20, $t1)
 27: $t22 := copy($t16)
 28: $t23 := borrow_field<Bbay::User>.order_status($t16)
 29: $t24 := 1
 30: vector::push_back<u64>($t23, $t24)
 31: $t25 := move($t3)
 32: $t26 := true
 33: $t27 := ==($t3, $t26)
 34: if ($t27) goto 35 else goto 49
 35: label L1
 36: $t28 := copy($t14)
 37: $t29 := 0x1a
 38: $t30 := move($t18)
 39: $t31 := get_field<Bbay::Products>.item_price($t18)
 40: $t32 := move($t2)
 41: $t33 := table::borrow<u64, u64>($t31, $t2)
 42: $t34 := move($t33)
 43: coin::transfer<#0>($t14, $t29, $t33)
 44: $t35 := move($t16)
 45: $t36 := borrow_field<Bbay::User>.payment_status($t16)
 46: $t37 := 2
 47: vector::push_back<u64>($t36, $t37)
 48: goto 55
 49: label L0
 50: $t38 := move($t18)
 51: $t39 := move($t16)
 52: $t40 := borrow_field<Bbay::User>.payment_status($t16)
 53: $t41 := 1
 54: vector::push_back<u64>($t40, $t41)
 55: label L2
 56: return ()
}


[variant baseline]
public fun Bbay::register_account($t0|account: signer, $t1|seed: vector<u8>) {
     var $t2|owner_data: &mut Bbay::Owner
     var $t3|resource_account: signer
     var $t4|resource_account_signer_cap: account::SignerCapability
     var $t5: address
     var $t6: &mut Bbay::Owner
     var $t7: &mut Bbay::Owner
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: &mut Bbay::Owner
     var $t13: &mut u64
     var $t14: signer
     var $t15: vector<u8>
     var $t16: signer
     var $t17: account::SignerCapability
     var $t18: signer
     var $t19: &mut Bbay::Owner
     var $t20: u64
     var $t21: u64
     var $t22: vector<u64>
     var $t23: vector<u64>
     var $t24: vector<u64>
     var $t25: Bbay::User
     var $t26: signer
     var $t27: signer
     var $t28: account::SignerCapability
     var $t29: Bbay::ResourceAccountSignerCap
  0: trace_local[account]($t0)
  1: trace_local[seed]($t1)
  2: $t5 := 0x1a
  3: $t6 := borrow_global<Bbay::Owner>($t5)
  4: $t2 := $t6
  5: trace_local[owner_data]($t6)
  6: $t7 := copy($t6)
  7: $t8 := get_field<Bbay::Owner>.user_count($t6)
  8: $t9 := move($t8)
  9: $t10 := 1
 10: $t11 := +($t8, $t10)
 11: $t12 := copy($t6)
 12: $t13 := borrow_field<Bbay::Owner>.user_count($t6)
 13: write_ref($t13, $t11)
 14: $t14 := move($t0)
 15: $t15 := move($t1)
 16: ($t16, $t17) := account::create_resource_account($t0, $t1)
 17: $t4 := $t17
 18: trace_local[resource_account_signer_cap]($t17)
 19: $t3 := $t16
 20: trace_local[resource_account]($t16)
 21: $t18 := copy($t16)
 22: $t19 := move($t6)
 23: $t20 := get_field<Bbay::Owner>.user_count($t6)
 24: $t21 := move($t20)
 25: $t22 := vector::empty<u64>()
 26: $t23 := vector::empty<u64>()
 27: $t24 := vector::empty<u64>()
 28: $t25 := pack Bbay::User($t20, $t22, $t23, $t24)
 29: move_to<Bbay::User>($t25, $t16)
 30: $t26 := copy($t16)
 31: coin::register<aptos_coin::AptosCoin>($t16)
 32: $t27 := copy($t16)
 33: $t28 := move($t17)
 34: $t29 := pack Bbay::ResourceAccountSignerCap($t17)
 35: move_to<Bbay::ResourceAccountSignerCap>($t29, $t16)
 36: return ()
}


[variant baseline]
public fun Bbay::trigger_delivery() {
  0: return ()
}
